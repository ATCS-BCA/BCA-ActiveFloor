;
; Values for starting the program
;
define x 	   $01
define y	   $04

;
; Addresses
;
define ans_addr	   $00
define temp_addr   $02
define temp_addr_2   $04

main:
	LDA #x
	PHA 
	JSR d
	PLA ; get result
	STA ans_addr
	BRK

;
; d(x) = a(b(a(x), x+3))
;	
d:
	;
	; Implement function "d" here.
	;	
	TSX
	TXA
	CLC
	ADC #$03
	TAY
	LDA $0100	; 'accumulator has x'

	PHA 
	JSR a

	TSX
	TXA
	CLC
	ADC #$04	; (x is at 4, puts x in the accumulator)
	TAY
	LDA $0100	; 'accumulator has x'

	CLC
	ADC #$03	; x + 3

	PHA 
	JSR b

	JSR a 	; (grabs value off top of the stack)
	PLA
	STA temp_addr
	PLA

	TSX
	TXA
	CLC
	ADC #$03
	TAY
	LDA temp_addr

	STA $0100, Y 	;accumlator now has "s"
	RTS


	

	
;
;
; c(x,y) = b(x+4,x) + y
;
c:
	TSX
	TXA
	CLC
	ADC #$04
	TAY
	LDA $0100, Y	; Accumulator now has "x"
	
	STA temp_addr
	
	ADC #$04 
	PHA 			; Push x + 4 onto the stack
	
	LDA temp_addr
	PHA				; Push x onto the stack.
	
	JSR b
	
	PLA				; Get the result from the stack
	STA temp_addr	; saves b(x+4, x)
	
	PLA				; Throw away the other parameter (x+4)

	TSX
	TXA
	CLC
	ADC #$03
	TAY
	LDA $0100, Y	; Accumulator now has "y"
	
	ADC temp_addr 	; adds b(x+4, x) with accumulator
	
	STA $0100, Y 	; Write the final value to the stack

	RTS

;
;
; a(x) = 2x + 3
;
a:
	TSX
	TXA
	CLC
	ADC #$03		; moves to the first parameter (x)
	TAY
	LDA $0100, Y	; loads x into accumulator
	
	STA temp_addr
	ADC temp_addr	; 2x now in accumulator

	ADC #$03
	STA $0100, Y	; replace the parameter with the return value
	RTS

;
;
; b(x,y) = a(x+2) + a(3y)
;
b:
	TSX			
	TXA
	CLC
	ADC #$03		; move to the 2nd parameter (y)
	TAY
	LDA $0100, Y	; loads y into accumulator
	
	STA temp_addr
	ADC temp_addr	; doubles y
	ADC temp_addr	; triples y
	PHA 			; Push 3y to the stack as an argument for a.
	JSR a			; Leave the result on the stack for now

	TSX
	TXA
	CLC
	ADC #$05		; moves to the first parameter (x)
	TAY
	LDA $0100, Y	; loads x into accumulator

	ADC #$02	
	PHA 			; Push x+2 to the stack as an argument for a.
	JSR a  			; Result from this call will be left on stack
	
	PLA				; a(x+2)
	STA temp_addr   
	PLA				; a(3y)
	ADC temp_addr
	STA temp_addr	; return value is in the temp_addr

	TSX
	TXA
	CLC
	ADC #$03		; overrite first parameter with the return val
	TAY

	LDA temp_addr
	STA $0100, Y
	RTS


